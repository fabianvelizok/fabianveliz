{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/forbid-prop-types */\n\n/* eslint-disable react/no-unused-prop-types */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport TagManager from 'react-gtm-module';\n\nclass GoogleTagManager extends Component {\n  constructor(_props) {\n    super(_props);\n\n    _defineProperty(this, \"shouldTrack\", () => {\n      const {\n        gtmId,\n        isClient,\n        hostname\n      } = this.props;\n      return gtmId && isClient && window.location.hostname !== hostname;\n    });\n\n    _defineProperty(this, \"initializeTagManager\", props => {\n      const {\n        auth,\n        dataLayer,\n        dataLayerName,\n        events,\n        gtmId,\n        preview\n      } = props;\n\n      if (this.shouldTrack()) {\n        TagManager.initialize({\n          auth,\n          dataLayer,\n          dataLayerName,\n          events,\n          gtmId,\n          preview\n        });\n      }\n    });\n\n    this.initializeTagManager(_props);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\n_defineProperty(GoogleTagManager, \"propTypes\", {\n  auth: PropTypes.string,\n  dataLayer: PropTypes.object,\n  dataLayerName: PropTypes.string,\n  events: PropTypes.object,\n  gtmId: PropTypes.string,\n  hostname: PropTypes.string,\n  isClient: PropTypes.bool,\n  preview: PropTypes.string\n});\n\n_defineProperty(GoogleTagManager, \"defaultProps\", {\n  auth: undefined,\n  dataLayer: undefined,\n  dataLayerName: 'dataLayer',\n  events: undefined,\n  gtmId: process.env.ID_GOOGLE_TAG_MANAGER,\n  hostname: 'localhost',\n  isClient: false,\n  preview: undefined\n});\n\nexport default GoogleTagManager;","map":{"version":3,"sources":["/home/fabian/Projects/fabianveliz/src/components/atoms/GoogleTagManager/GoogleTagManager.js"],"names":["PropTypes","React","Component","TagManager","GoogleTagManager","constructor","props","gtmId","isClient","hostname","window","location","auth","dataLayer","dataLayerName","events","preview","shouldTrack","initialize","initializeTagManager","shouldComponentUpdate","render","string","object","bool","undefined","process","env","ID_GOOGLE_TAG_MANAGER"],"mappings":";;AAAA;;AACA;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AAuBvCG,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN;;AADiB,yCAUL,MAAM;AAClB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,QAAT;AAAmBC,QAAAA;AAAnB,UAAgC,KAAKH,KAA3C;AACA,aAAOC,KAAK,IAAIC,QAAT,IAAqBE,MAAM,CAACC,QAAP,CAAgBF,QAAhB,KAA6BA,QAAzD;AACD,KAbkB;;AAAA,kDAeIH,KAAK,IAAI;AAC9B,YAAM;AAAEM,QAAAA,IAAF;AAAQC,QAAAA,SAAR;AAAmBC,QAAAA,aAAnB;AAAkCC,QAAAA,MAAlC;AAA0CR,QAAAA,KAA1C;AAAiDS,QAAAA;AAAjD,UAA6DV,KAAnE;;AAEA,UAAI,KAAKW,WAAL,EAAJ,EAAwB;AACtBd,QAAAA,UAAU,CAACe,UAAX,CAAsB;AAAEN,UAAAA,IAAF;AAAQC,UAAAA,SAAR;AAAmBC,UAAAA,aAAnB;AAAkCC,UAAAA,MAAlC;AAA0CR,UAAAA,KAA1C;AAAiDS,UAAAA;AAAjD,SAAtB;AACD;AACF,KArBkB;;AAGjB,SAAKG,oBAAL,CAA0Bb,MAA1B;AACD;;AAEDc,EAAAA,qBAAqB,GAAG;AACtB,WAAO,KAAP;AACD;;AAeDC,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AAhDsC;;gBAAnCjB,gB,eACe;AACjBQ,EAAAA,IAAI,EAAEZ,SAAS,CAACsB,MADC;AAEjBT,EAAAA,SAAS,EAAEb,SAAS,CAACuB,MAFJ;AAGjBT,EAAAA,aAAa,EAAEd,SAAS,CAACsB,MAHR;AAIjBP,EAAAA,MAAM,EAAEf,SAAS,CAACuB,MAJD;AAKjBhB,EAAAA,KAAK,EAAEP,SAAS,CAACsB,MALA;AAMjBb,EAAAA,QAAQ,EAAET,SAAS,CAACsB,MANH;AAOjBd,EAAAA,QAAQ,EAAER,SAAS,CAACwB,IAPH;AAQjBR,EAAAA,OAAO,EAAEhB,SAAS,CAACsB;AARF,C;;gBADflB,gB,kBAYkB;AACpBQ,EAAAA,IAAI,EAAEa,SADc;AAEpBZ,EAAAA,SAAS,EAAEY,SAFS;AAGpBX,EAAAA,aAAa,EAAE,WAHK;AAIpBC,EAAAA,MAAM,EAAEU,SAJY;AAKpBlB,EAAAA,KAAK,EAAEmB,OAAO,CAACC,GAAR,CAAYC,qBALC;AAMpBnB,EAAAA,QAAQ,EAAE,WANU;AAOpBD,EAAAA,QAAQ,OAPY;AAQpBQ,EAAAA,OAAO,EAAES;AARW,C;;AAuCxB,eAAerB,gBAAf","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/no-unused-prop-types */\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport TagManager from 'react-gtm-module';\n\nclass GoogleTagManager extends Component {\n  static propTypes = {\n    auth: PropTypes.string,\n    dataLayer: PropTypes.object,\n    dataLayerName: PropTypes.string,\n    events: PropTypes.object,\n    gtmId: PropTypes.string,\n    hostname: PropTypes.string,\n    isClient: PropTypes.bool,\n    preview: PropTypes.string,\n  };\n\n  static defaultProps = {\n    auth: undefined,\n    dataLayer: undefined,\n    dataLayerName: 'dataLayer',\n    events: undefined,\n    gtmId: process.env.ID_GOOGLE_TAG_MANAGER,\n    hostname: 'localhost',\n    isClient: typeof window !== 'undefined',\n    preview: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.initializeTagManager(props);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  shouldTrack = () => {\n    const { gtmId, isClient, hostname } = this.props;\n    return gtmId && isClient && window.location.hostname !== hostname;\n  };\n\n  initializeTagManager = props => {\n    const { auth, dataLayer, dataLayerName, events, gtmId, preview } = props;\n\n    if (this.shouldTrack()) {\n      TagManager.initialize({ auth, dataLayer, dataLayerName, events, gtmId, preview });\n    }\n  };\n\n  render() {\n    return null;\n  }\n}\n\nexport default GoogleTagManager;\n"]},"metadata":{},"sourceType":"module"}